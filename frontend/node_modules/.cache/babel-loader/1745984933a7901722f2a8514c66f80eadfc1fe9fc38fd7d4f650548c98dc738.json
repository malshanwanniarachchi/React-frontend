{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\compenents\\\\UpdateCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom'; // Import useParams and useHistory for routing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateCustomer() {\n  _s();\n  const {\n    customerId\n  } = useParams(); // Retrieve the customerId from URL params\n  const history = useHistory(); // Use history for navigation\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    // Function to fetch customer data by id\n    const fetchCustomer = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/customers/show/customer/${customerId}`);\n        const {\n          name,\n          email\n        } = response.data; // Destructure name and email from response data\n        setName(name);\n        setEmail(email);\n      } catch (error) {\n        console.error('Error fetching customer:', error);\n      }\n    };\n    fetchCustomer(); // Fetch customer data when component mounts\n  }, [customerId]); // Dependency array ensures this effect runs when customerId changes\n\n  const handleSave = async () => {\n    const updatedCustomer = {\n      id: customerId,\n      name,\n      email\n    };\n    try {\n      await axios.put(`http://localhost:5000/customers/update/customer/${customerId}`, updatedCustomer);\n      alert('Customer updated successfully!');\n      history.push('/customer-list'); // Navigate back to customer list after save\n    } catch (error) {\n      console.error('Error updating customer:', error);\n      alert('Failed to update customer.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSave,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateCustomer, \"NHC3OfEaZ2/2+Xl0Noyyp5+71EM=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = UpdateCustomer;\nvar _c;\n$RefreshReg$(_c, \"UpdateCustomer\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useHistory","jsxDEV","_jsxDEV","UpdateCustomer","_s","customerId","history","name","setName","email","setEmail","fetchCustomer","response","get","data","error","console","handleSave","updatedCustomer","id","put","alert","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/New folder/frontend/src/compenents/UpdateCustomer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useHistory } from 'react-router-dom';  // Import useParams and useHistory for routing\r\n\r\nexport default function UpdateCustomer() {\r\n  const { customerId } = useParams();  // Retrieve the customerId from URL params\r\n  const history = useHistory();  // Use history for navigation\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Function to fetch customer data by id\r\n    const fetchCustomer = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/customers/show/customer/${customerId}`);\r\n        const { name, email } = response.data;  // Destructure name and email from response data\r\n        setName(name);\r\n        setEmail(email);\r\n      } catch (error) {\r\n        console.error('Error fetching customer:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomer();  // Fetch customer data when component mounts\r\n  }, [customerId]);  // Dependency array ensures this effect runs when customerId changes\r\n\r\n  const handleSave = async () => {\r\n    const updatedCustomer = { id: customerId, name, email };\r\n\r\n    try {\r\n      await axios.put(`http://localhost:5000/customers/update/customer/${customerId}`, updatedCustomer);\r\n      alert('Customer updated successfully!');\r\n      history.push('/customer-list');  // Navigate back to customer list after save\r\n    } catch (error) {\r\n      console.error('Error updating customer:', error);\r\n      alert('Failed to update customer.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Edit Customer</h2>\r\n      <form onSubmit={handleSave}>\r\n        <div>\r\n          <label>Name:</label>\r\n          <input type=\"text\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n        </div>\r\n        <div>\r\n          <label>Email:</label>\r\n          <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n        </div>\r\n        <button type=\"submit\">Save</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB,CAAC,CAAE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAW,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAE;EACrC,MAAMO,OAAO,GAAGN,UAAU,CAAC,CAAC,CAAC,CAAE;;EAE/B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,iDAAiDR,UAAU,EAAE,CAAC;QAC/F,MAAM;UAAEE,IAAI;UAAEE;QAAM,CAAC,GAAGG,QAAQ,CAACE,IAAI,CAAC,CAAE;QACxCN,OAAO,CAACD,IAAI,CAAC;QACbG,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC,CAAC,CAAE;EACpB,CAAC,EAAE,CAACN,UAAU,CAAC,CAAC,CAAC,CAAE;;EAEnB,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,MAAMC,eAAe,GAAG;MAAEC,EAAE,EAAEd,UAAU;MAAEE,IAAI;MAAEE;IAAM,CAAC;IAEvD,IAAI;MACF,MAAMX,KAAK,CAACsB,GAAG,CAAC,mDAAmDf,UAAU,EAAE,EAAEa,eAAe,CAAC;MACjGG,KAAK,CAAC,gCAAgC,CAAC;MACvCf,OAAO,CAACgB,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAE;IACnC,CAAC,CAAC,OAAOP,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDM,KAAK,CAAC,4BAA4B,CAAC;IACrC;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBzB,OAAA;MAAM0B,QAAQ,EAAEX,UAAW;MAAAM,QAAA,gBACzBrB,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAAqB,QAAA,EAAO;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACpBzB,OAAA;UAAO2B,IAAI,EAAC,MAAM;UAACC,KAAK,EAAEvB,IAAK;UAACwB,QAAQ,EAAGC,CAAC,IAAKxB,OAAO,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClF,CAAC,eACNzB,OAAA;QAAAqB,QAAA,gBACErB,OAAA;UAAAqB,QAAA,EAAO;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrBzB,OAAA;UAAO2B,IAAI,EAAC,OAAO;UAACC,KAAK,EAAErB,KAAM;UAACsB,QAAQ,EAAGC,CAAC,IAAKtB,QAAQ,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAACI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrF,CAAC,eACNzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACvB,EAAA,CApDuBD,cAAc;EAAA,QACbJ,SAAS,EAChBC,UAAU;AAAA;AAAAmC,EAAA,GAFJhC,cAAc;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}