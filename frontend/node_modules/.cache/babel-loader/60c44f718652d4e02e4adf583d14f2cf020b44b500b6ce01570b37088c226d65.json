{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\New folder\\\\frontend\\\\src\\\\compenents\\\\UpdateCustomer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport './UpdateCustomer.css'; // Adjust the path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateCustomer() {\n  _s();\n  const {\n    id\n  } = useParams(); // Extract customer id from URL\n  const history = useHistory();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    const fetchCustomer = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/customers/show/${id}`);\n        const {\n          name,\n          email\n        } = response.data; // Assuming backend returns { name, email }\n        setName(name);\n        setEmail(email);\n      } catch (error) {\n        console.error('Error fetching customer:', error);\n      }\n    };\n    fetchCustomer();\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const updatedCustomer = {\n      name,\n      email\n    };\n    try {\n      const response = await axios.put(`http://localhost:5000/customers/update/${id}`, updatedCustomer);\n      if (response.status === 200) {\n        alert('Customer updated successfully!');\n        history.push('/list'); // Redirect to customer list page after update\n      } else {\n        alert('Failed to update customer.');\n      }\n    } catch (error) {\n      console.error('Error updating customer:', error);\n      alert('Error updating customer.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update-customer-container\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Update Customer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"name\",\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"email\",\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Customer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(UpdateCustomer, \"py8E3bqLlcjIh0nFIS6Iey8Kem0=\", false, function () {\n  return [useParams, useHistory];\n});\n_c = UpdateCustomer;\nvar _c;\n$RefreshReg$(_c, \"UpdateCustomer\");","map":{"version":3,"names":["React","useState","useEffect","axios","useParams","useHistory","jsxDEV","_jsxDEV","UpdateCustomer","_s","id","history","name","setName","email","setEmail","fetchCustomer","response","get","data","error","console","handleSubmit","e","preventDefault","updatedCustomer","put","status","alert","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/User/Desktop/New folder/frontend/src/compenents/UpdateCustomer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useParams, useHistory } from 'react-router-dom';\r\nimport './UpdateCustomer.css'; // Adjust the path as needed\r\n\r\nexport default function UpdateCustomer() {\r\n  const { id } = useParams(); // Extract customer id from URL\r\n  const history = useHistory();\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchCustomer = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/customers/show/${id}`);\r\n        const { name, email } = response.data; // Assuming backend returns { name, email }\r\n        setName(name);\r\n        setEmail(email);\r\n      } catch (error) {\r\n        console.error('Error fetching customer:', error);\r\n      }\r\n    };\r\n\r\n    fetchCustomer();\r\n  }, [id]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const updatedCustomer = { name, email };\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:5000/customers/update/${id}`, updatedCustomer);\r\n      if (response.status === 200) {\r\n        alert('Customer updated successfully!');\r\n        history.push('/list'); // Redirect to customer list page after update\r\n      } else {\r\n        alert('Failed to update customer.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error updating customer:', error);\r\n      alert('Error updating customer.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"update-customer-container\"> {/* Apply the CSS class here */}\r\n      <h1>Update Customer</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name:</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\">Update Customer</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,UAAU,QAAQ,kBAAkB;AACxD,OAAO,sBAAsB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,eAAe,SAASC,cAAcA,CAAA,EAAG;EAAAC,EAAA;EACvC,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC,CAAC,CAAC;EAC5B,MAAMO,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,wCAAwCR,EAAE,EAAE,CAAC;QAC9E,MAAM;UAAEE,IAAI;UAAEE;QAAM,CAAC,GAAGG,QAAQ,CAACE,IAAI,CAAC,CAAC;QACvCN,OAAO,CAACD,IAAI,CAAC;QACbG,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAEDJ,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACN,EAAE,CAAC,CAAC;EAER,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,eAAe,GAAG;MAAEb,IAAI;MAAEE;IAAM,CAAC;IAEvC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMd,KAAK,CAACuB,GAAG,CAAC,0CAA0ChB,EAAE,EAAE,EAAEe,eAAe,CAAC;MACjG,IAAIR,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;QAC3BC,KAAK,CAAC,gCAAgC,CAAC;QACvCjB,OAAO,CAACkB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;MACzB,CAAC,MAAM;QACLD,KAAK,CAAC,4BAA4B,CAAC;MACrC;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDQ,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,oBACErB,OAAA;IAAKuB,SAAS,EAAC,2BAA2B;IAAAC,QAAA,GAAC,GAAC,eAC1CxB,OAAA;MAAAwB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB5B,OAAA;MAAM6B,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BxB,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxB,OAAA;UAAO8B,OAAO,EAAC,MAAM;UAAAN,QAAA,EAAC;QAAK;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnC5B,OAAA;UACEG,EAAE,EAAC,MAAM;UACT4B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE3B,IAAK;UACZ4B,QAAQ,EAAGjB,CAAC,IAAKV,OAAO,CAACU,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UACzCG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAKuB,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBxB,OAAA;UAAO8B,OAAO,EAAC,OAAO;UAAAN,QAAA,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACrC5B,OAAA;UACEG,EAAE,EAAC,OAAO;UACV4B,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEzB,KAAM;UACb0B,QAAQ,EAAGjB,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;UAC1CG,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN5B,OAAA;QAAQ+B,IAAI,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAAC1B,EAAA,CApEuBD,cAAc;EAAA,QACrBJ,SAAS,EACRC,UAAU;AAAA;AAAAsC,EAAA,GAFJnC,cAAc;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}